services:
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus/data"
    ports:
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090" ]
      interval: 10s
      timeout: 15s
      retries: 10
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    depends_on:
      cadvisor:
        condition: service_healthy

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    ports:
      - "8480:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthz" ]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - /:/rootfs:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw

  grafana:
    image: grafana/grafana:8.3.4
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_BASIC_ENABLED=false
      - GF_USERS_DEFAULT_THEME=light
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health" ]
      interval: 10s
      timeout: 15s
      retries: 10
    volumes:
      - grafana:/var/lib/grafana
      - ./docker/grafana/:/etc/grafana/provisioning/
    depends_on:
      prometheus:
        condition: service_healthy
      influxdb:
        condition: service_healthy

volumes:
  prometheus:
  grafana:
