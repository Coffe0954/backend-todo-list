name: Build project
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "gradle"

      - name: Validate
        uses: pre-commit/action@v3.0.0

      - name: Build project
        run: ./gradlew clean build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: build/libs/*.jar
          retention-days: 1

      - name: Unit Tests Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: "**/build/test-results/test/TEST-*.xml"

  test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: build/libs/

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose up -d --wait

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: tests/postman/collection.json
          environment: tests/postman/docker-environment.json
          delayRequest: 100
          reporters: "[ 'cli' ]"

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v

  ui:
    name: UI Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "gradle"

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: build/libs/

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose \
              -f docker-compose.yml \
              -f docker-compose.frontend.yml \
              -f docker-compose.selenoid.yml \
              up -d --wait

      - name: Pull Chrome image
        run: docker pull selenoid/vnc:chrome_124.0

      - name: Run Selenium Tests
        timeout-minutes: 5
        run: ./gradlew selenoid

      - name: List Selenoid logs
        if: failure()
        timeout-minutes: 5
        run: docker logs selenoid

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Selenium Tests Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: "**/build/test-results/test/TEST-*.xml"

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: |
          docker compose \
              -f docker-compose.yml \
              -f docker-compose.frontend.yml \
              -f docker-compose.selenoid.yml \
              down -v

  publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [ test, ui ]
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: build/libs/

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Push images
        run: docker compose push
